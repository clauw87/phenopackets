syntax = "proto3";
package org.matchmakerexchange.api.v1;

import "base.proto";

option java_multiple_files = true;
option java_outer_classname = "GCAT";
option java_package = "org.gcat.api.v1";

// This is an example of GCAT phenopacket schema definition that reuses Phenopacket schema common elements and defines some custom resource-specific messages to be used across datasets from GCAT project 




message EncountersSet {  
// after TimeCourse now deprecated as message in base.proto
    string id = 1
    string description = 2
    org.phenopackets.schema.v1.core.Individual subject = 3
    //repeated org.phenopackets.schema.v1.core.Phenopacket encounters = 4
    repeated Encounter encounters = 4
    org.phenopakets.schema.v1.core.MetaData metadata = 5 
}
 



message Encounter { 
// after Phenopacket message
    string id = 1;
    repeated Age age_at_encounter = 2;
    google.protobuf.Timestamp encounter_time = 3;
    \\TimeElement encounter_time = 4;
    repeated Finding findings = 5;
    repeated Diagnose diagnoses = 6;
    repeated ExposureExtended exposures = 7;
    repeated org.phenopackets.schema.v1.core.HtsFile hts_files = 8;
    org.phenopackets.schema.v1.core.MetaData meta_data = 9
}







message Diagnose {   
// based on Disease but includes also an Origin class to describe the medical unit where diagnose was given
    org.phenopackets.schema.v1.core.Disease disease = 1;
    Origin origin = 2;
}



message Finding {
    one of {
        repeated ClinicalFinding = 2;
        repeated ExposureExtended = 3;
        repeated Measurement = 1;
        repeated Score = 4;
        repeated Category = 5;
    }
}



message Origin {
    string type = 1;
    string code =2;
    string name = 3;
}



message ClinicalFinding {
    PhenotypicFeature clinical_finding = 1;
    Origin origin = 2;
}




message ExposureExtended {
    Exposure exposure = 1;
    Quantity quantity = 2;
    OntologyClass frequency = 3;
    TimeElement exposure_time = 4;


}




message Measurement {
    OntologyClass type = 1;
    Quantity quantity = 2;
    Origin origin = 3;
}



message Category {
    string description = 1;
    OntologyClass type = 1;
    OntologyClass classification = 2;
}



message Score { // a type of measurement ?
    string description = 1;
    OntologyClass type = 2;
    double value = 3;
}



message Medication {
    PharmaceuticalTreatment medications = 1; 
    OntologyClass frequency = 2;
}



message ProcedureExtended {
    Procedure procedure = 1;
    Origin origin = 2;
}












