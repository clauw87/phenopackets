syntax = "proto3";

package org.phenopackets.schema.v1.core;

import "google/protobuf/timestamp.proto";

import "base.proto";


option java_multiple_files = true;
option java_package = "org.phenopackets.schema.v1.core";




// This is an example of GCAT phenopacket schema definition that reuses Phenopacket schema common elements and defines some custom resource-specific messages to be used across datasets from GCAT project 




message EncountersSet {  
// after TimeCourse now deprecated as message in base.proto
    string set_id = 1;
    string description = 2;
    org.phenopackets.schema.v1.core.Individual subject = 3;
    repeated Encounter encounters = 4;
    org.phenopakets.schema.v1.core.MetaData metadata = 5;
}
 



message Encounter { 
// after Phenopacket message
    string encounter_id = 1;
    repeated org.phenopackets.schema.v1.core.Age age_at_encounter = 2;
    google.protobuf.Timestamp time_at_encounter = 3;
    \\org.phenopackets.schema.v1.1.core.TimeElement time_at_encounter = 4;
    repeated Finding findings = 4;
    repeated Diagnose diagnoses = 5;
    repeated ExposureExtended exposures = 6;
    repeated org.phenopackets.schema.v1.core.HtsFile hts_files = 7;
    org.phenopackets.schema.v1.core.MetaData meta_data = 8;
}







message Diagnose {   
// based on Disease but includes also an Origin class to describe the medical unit where diagnose was given
    org.phenopackets.schema.v1.core.Disease disease = 1;
    Origin origin = 2;
}



message Findings {
    one of {
        repeated ClinicalFinding clinical_findings= 1;
        repeated ExposureExtended exposures= 2;
        repeated Measurement measurements = 3;
        repeated Score scores = 4;
        repeated Category categories = 5;
    }
}



message Origin {
    string type = 1;
    string code =2;
    string name = 3;
}



message ClinicalFinding {
    org.phenopackets.schema.v1.core.PhenotypicFeature term = 1;
    Origin origin = 2;
}




message ExposureExtended {
    org.phenopackets.schema.v1.1.core.Exposure exposure = 1;
    org.phenopackets.schema.v1.1.core.Quantity quantity = 2;
    org.phenopackets.schema.v1.core.OntologyClass frequency = 3;
    TimeElement exposure_time = 4;


}




message Measurement {
    string description = 1;
    org.phenopackets.schema.v1.core.OntologyClass parameter = 2;
    org.phenopackets.schema.v1.1.core.Quantity quantity = 3;
    Origin origin = 4;
}



message Category {
    string description = 1;
    org.phenopackets.schema.v1.core.OntologyClass type = 2;
    org.phenopackets.schema.v1.core.OntologyClass classification = 3;
}



message Score { // a type of measurement ?
    string description = 1;
    org.phenopackets.schema.v1.core.OntologyClass type = 2;
    double value = 3;
}



message Medication {
    org.phenopackets.schema.v1.1.core.PharmaceuticalTreatment medications = 1; 
    org.phenopackets.schema.v1.core.OntologyClass frequency = 2;
}



message ProcedureExtended {
    org.phenopackets.schema.v1.1.core.Procedure procedure = 1;
    Origin origin = 2;
}











