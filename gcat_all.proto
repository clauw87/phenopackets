syntax = "proto3";


import "base.proto";

option java_multiple_files = true;

\\\\     \\\\\     \\\\\    \\\\\    \\\\     \\\\\     \\\\\     

\\ Base messages and building blocks reused
\\ commented are parts not nedded in current schema but nevertheless the whole message was reused whenever possible


message Individual {
    string id = 1;
    \\repeated string alternate_ids = 2;
    google.protobuf.Timestamp date_of_birth = 3;
    \\Age age_at_collection = 4;
    Sex sex = 6;
    \\KaryotypicSex karyotypic_sex = 7;
    \\OntologyClass taxonomy = 8;
}


message Phenopacket {
    string id = 1;
    string type = 2;
    \\org.phenopackets.schema.v1.core.Individual subject = 2;
    \\repeated org.phenopackets.schema.v1.core.PhenotypicFeature phenotypic_features = 3;
    \\repeated org.phenopackets.schema.v1.core.Biosample biosamples = 4;
    \\repeated org.phenopackets.schema.v1.core.Gene genes = 5;
    \\repeated org.phenopackets.schema.v1.core.Variant variants = 6;
    repeated org.phenopackets.schema.v1.core.Disease diseases = 7;
    repeated org.phenopackets.schema.v1.core.HtsFile hts_files = 8;
    org.phenopackets.schema.v1.core.MetaData meta_data = 9;



message PhenotypicFeature {
    string description = 1;
    OntologyClass type = 2;
    bool negated = 3;
    OntologyClass severity = 4;
    repeated OntologyClass modifiers = 5;
    //oneof onset {
    //    Age age_of_onset = 6;
    //    AgeRange age_range_of_onset = 7;
    //    OntologyClass class_of_onset = 9;
    //}
    repeated Evidence evidence = 10;
}



message Evidence {
    OntologyClass evidence_code = 1;
    ExternalReference reference = 2;
}


message Disease {
    OntologyClass term = 1;
    oneof onset {
        //Age age_of_onset = 2;
        //AgeRange age_range_of_onset = 3;
        //OntologyClass class_of_onset = 4;
    }
    //repeated OntologyClass disease_stage = 5;
    //repeated OntologyClass tnm_finding = 6;

}



message Age {
    string age = 1;
}




message MetaData {
    google.protobuf.Timestamp created = 1;
    string created_by = 2;
    string submitted_by = 3;
    repeated Resource resources = 4;
    repeated Update updates = 5;
    string phenopacket_schema_version = 6;
    repeated ExternalReference external_references = 7;
}




message Resource {
    // for OBO Ontologies, the value of this string MUST always be the official
    // OBO ID, which is always equivalent to the ID prefix in lower case.
    // Examples: hp, go, mp, mondo
    // Consult http://obofoundry.org for a complete list
    // For other ontologies (e.g. SNOMED), use the prefix in identifiers.org
    string id = 1;
    string name = 2;
    string url = 3;
    string version = 4;
    string namespace_prefix = 5;
    string iri_prefix = 6;
}




\\\\     \\\\\     \\\\\    \\\\\


\\\\     \\\\\     \\\\\    \\\\\


\\\\     \\\\\     \\\\\    \\\\\


\\ New messages v1.1 reused


message TimeElement {
    oneof element {
    Age age = 1;
    AgeRange age_range = 2;
    OntologyClass ontology_class = 3;
    google.protobuf.Timestamp timestamp = 4;
    Interval interval = 5;
    }
}

message Interval {
    google.protobuf.Timestamp start = 1;
    google.protobuf.Timestamp end = 2;
}


message Exposure {
    string description = 1;
    OntologyClass type = 2;
    bool negated = 3;
    OntologyClass severity = 4;
    repeated OntologyClass modifiers = 5;
    oneof start {
        Age age_at_start = 6;
        AgeRange age_range_at_start = 7;
        OntologyClass class_at_start = 9;
        google.protobuf.Timestamp time_at_start = 11;
    }
    oneof end {
        Age age_at_end = 12;
        AgeRange age_range_at_end = 13;
        OntologyClass class_at_end = 14;
        }
    repeated Evidence evidence = 10;
}





message MedicalAction {
    oneof action {
        PharmaceuticalTreatment pharmaceutical_treatment = 1;
        Procedure procedure = 2;
    }
}



message PharmaceuticalTreatment {
    OntologyClass drug = 1;
    OntologyClass route_of_administration = 2; 
    repeated DoseInterval dose_intervals = 3;
    DrugType drug_type = 4;
    \\StopReason stop_reason_id = 5;
}



message DoseInterval {
    Quantity quantity = 1;
    Interval interval = 2; 
    }




enum DrugType {
    UNKNOWN_DRUG_TYPE = 0;
    PRESCRIPTION = 1;
    EHR_MEDICATION_LIST = 2;
    ADMINISTRATION_RELATED_TO_PROCEDURE = 3;
}



message Procedure {
    OntologyClass code = 1;
    //OntologyClass body_site = 2;
}




message Quantity {
    OntologyClass unit = 1;
    double value = 2;
}




\\\\     \\\\\     \\\\\    \\\\\


\\\\     \\\\\     \\\\\    \\\\\


\\\\     \\\\\     \\\\\    \\\\\







\\ Modified messages and custom messages



message EncountersSet {  
// after TimeCourse now deprecated as message in base.proto
    string id = 1
    string description = 2
    org.phenopackets.schema.v1.core.Individual subject = 3
    //repeated org.phenopackets.schema.v1.core.Phenopacket encounters = 4
    repeated Encounter encounters = 4
    org.phenopakets.schema.v1.core.MetaData metadata = 5 
}
  



message Encounter { 
// after Phenopacket message
    string id = 1;
    Age age_at_encounter = 2;
    google.protobuf.Timestamp encounter_time = 3;
    \\TimeElement encounter_time = 4;
    repeated Finding findings = 4;
    repeated Diagnose diagnoses = 5;
    repeated ExposureExtended exposures = 6;
    repeated org.phenopackets.schema.v1.core.HtsFile hts_files = 7;
    org.phenopackets.schema.v1.core.MetaData meta_data = 8;
}




message Diagnose {   
// based on Disease but includes also an Origin class to describe the medical unit where diagnose was given
    org.phenopackets.schema.v1.core.Disease disease = 1;
    Origin origin = 2;
}



message Origin {
    string type = 1;
    string code =2;
    string name = 3;
}




message Finding {
    one of {
        repeated ClinicalFinding = 1;
        repeated ExposureExtended = 2;
        repeated Measurement = 3;
        repeated Score = 4;
        repeated Category = 5;
    }
}




message ClinicalFinding {
    PhenotypicFeature clinical_finding = 1;
    Origin origin = 2;
}




message ExposureExtended {
    Exposure exposure = 1;
    Quantity quantity = 2;
    OntologyClass frequency = 3;
    TimeElement exposure_time = 4;


}


message Measurement {
    OntologyClass type = 1;
    Quantity quantity = 2;
    Origin origin = 3;
}



message Category {
    string description = 1;
    OntologyClass type = 2;
    OntologyClass classification = 3;
}



message Score { 
// a type of measurement ?
    string description = 1;
    OntologyClass type = 2;
    double value = 3;
}



message Medication {
    PharmaceuticalTreatment medications = 1; 
    OntologyClass frequency = 2;
}



message ProcedureExt {
    Procedure procedure = 1;
    Origin origin = 2;
}





/////////////////////////////////////////////////////////



